name: OpenMRS CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  TURBO_API: 'http://127.0.0.1:9080'
  TURBO_TOKEN: ${{ secrets.TURBO_SERVER_TOKEN }}
  TURBO_TEAM: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Run tests, lint and typechecking
        run: yarn verify

      - name: Run build
        run: yarn turbo run build --concurrency=5

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          overwrite: true

  pre_release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.repository_owner == 'openmrs' }}

    steps:
      - uses: actions/checkout@v4
      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: 💾 Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: 🚀 Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}
      - name: 🏷️ Version
        run: yarn version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}"

      - name: 🏗️ Build
        run: yarn turbo run build

      - name: 🔧 Configure Git
        run: git config user.email "info@openmrs.org" && git config user.name "OpenMRS CI"
      - name: 💾 Commit changes
        run: git add . && git commit -m "Prerelease version" --no-verify

      - name: 🚀 Pre-release
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          overwrite: true

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'release' && github.repository_owner == 'openmrs' }}

    steps:
      - uses: actions/checkout@v4
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
      - name: 🛠️ Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: 💾 Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: 🚀 Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: 🏗️ Build
        run: yarn turbo run build
      - name: 🚀 Publish to NPM
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          overwrite: true
